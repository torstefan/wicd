Also parse LC_MESSAGES from environment variables, and also put them at
higher priority than locale.getdefaultlocale()
---
 wicd/misc.py |   16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

--- wicd-1.5.9.orig/wicd/misc.py
+++ wicd-1.5.9/wicd/misc.py
@@ -316,17 +316,23 @@ def get_gettext():
     # http://www.learningpython.com/2006/12/03/translating-your-pythonpygtk-application/
     local_path = wpath.translations
     langs = []
+    osLanguage = os.environ.get('LANGUAGE', None)
+    if osLanguage:
+        langs += osLanguage.split(":")
+    osLanguage = None
+    osLanguage = os.environ.get('LC_MESSAGES', None)
+    if osLanguage:
+        langs += osLanguage.split(":")
     try:
-        lc, encoding = locale.getdefaultlocale()
+        # This avoids a bug: locale.getdefaultlocale() prefers
+        # LC_CTYPE over LANG/LANGUAGE
+        lc, encoding = locale.getdefaultlocale(envvars=('LC_MESSAGES', 'LC_ALL', 'LANG', 'LANGUAGE'))
     except ValueError, e:
         print str(e)
         print "Default locale unavailable, falling back to en_US"
         lc = None
     if lc:
-        langs = [lc]
-    osLanguage = os.environ.get('LANGUAGE', None)
-    if osLanguage:
-        langs += osLanguage.split(":")
+        langs += [lc]
     langs += ["en_US"]
     lang = gettext.translation('wicd', local_path, languages=langs, 
                                fallback=True)
